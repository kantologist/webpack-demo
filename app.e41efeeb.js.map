{"version":3,"sources":["webpack:///./app/components/routes/routes.js","webpack:///./app/main.css","webpack:///./app/components/home/home.js","webpack:///./app/components/postdetail/postdetail.js","webpack:///./app/index.js","webpack:///./app/base.css","webpack:///./app/components/about/about.css","webpack:///./app/components/post/post.css","webpack:///./app/components/notfound/notfound.js","webpack:///./app/component.js","webpack:///./app/components/header/header.js","webpack:///./app/components/post/post.js","webpack:///./app/components/about/about.js","webpack:///./app/components/header/header.css","webpack:///./blog-posts.json"],"names":[],"mappings":";uLAAA,OAmCM,QAYS,IAZA,IACb,aAAC,cAAD,IACE,gCAAC,KAAM,SAAM,KAAK,iBAAiB,UACnC,iCAAC,KAAM,KAAK,sBAAsB,UAClC,iCAAC,KAAM,KAAK,2BAA2B,UAAW,KAChD,MAAM,GAAO,IAAM,MAAM,OAAO,KAAQ,EAAM,MAAM,OAAO,OAAS,EACpE,YAAO,4BAAE,KAAW,KAAM,EAC3B,IACD,+BAAC,KAAM,UAIX,0BC/CA,CACA,EAAkB,0SCGZ,EAMS,IANF,IACb,iCACG,SAAM,MAAM,IAAI,KAAQ,2BAAC,SAAS,GAAM,IAAK,EAAK,KAIrD,2ECNM,QAQS,IARK,KAClB,0CAEE,8BAAC,IAAS,EAKd,uKCHA,QAEA,cAAO,2BAAC,IAAR,MAAgB,SAAS,eAGvB,YACD,+BCfD,mBCAA,CACA,EAAkB,mGCDlB,CACA,EAAkB,gKCEZ,QAIS,IAJE,IACf,qCAGF,6HCPA,YAoCM,QAWS,IAXH,IACV,aAAC,cAAD,IACA,sCACE,gCAAC,IACD,wCAAK,UAAW,IAChB,sCAAE,IAMN,qFC1CM,QAcS,IAdA,IACb,qCAAQ,UAAW,IACjB,0CAAK,UAAW,IACd,4CAAI,UAAW,IAAO,OACtB,gDACE,sCAAI,UAAW,IACb,uCAAI,UAAW,IAAkB,wBAAC,cAAD,KAAM,UAAW,IAAO,MAAO,GAAG,uBACnE,2CAAI,UAAW,IAAkB,wBAAC,cAAD,KAAM,UAAW,IAAO,MAAO,GAAG,kBAO7E,yFCdM,QAWS,IAXD,KACZ,iCACE,sCAAI,UAAW,IACd,SAAM,UACJ,aAAC,cAAD,KAAM,UAAW,IAAO,KAAW,yBAAqB,EAAW,IAAI,MAAM,OAC5E,EAEJ,uCAAG,UAAW,IAAiB,WAAM,QAIzC,2ECbM,GAOS,IAPD,IACZ,iCACE,sCAAI,UAAW,IAAO,SACtB,mDAAG,UAAW,IAAO,KAIzB,4CCVA,CACA,EAAkB,0QCDlB,EAqBA","file":"app.e41efeeb.js","sourcesContent":["// // import styles from './main.css';\n//\n// export default (text='Hello world. Enjoying web pack? cool') => {\n//   const element = document.createElement('div');\n//\n//   element.innerHTML = text;\n//   element.className = 'fa fa-hand-spock-o fa-lg';\n//\n//   element.onclick = () => {\n//     import('./lazy').then((lazy) => {\n//       element.textContent = lazy.default;\n//     }).catch((err) => {\n//       console.error(err);\n//     });\n//   };\n//\n//   return element;\n// };\n\n\n// import component from './component';\nimport styles from '../../main.css'; // eslint-disable-line no-unused-vars\nimport React from 'react'; // eslint-disable-line no-unused-vars\nimport Header from '../header/header'; // eslint-disable-line no-unused-vars\nimport Post from '../post/post'; // eslint-disable-line no-unused-vars\nimport About from '../about/about'; // eslint-disable-line no-unused-vars\nimport NotFound from '../notfound/notfound'; // eslint-disable-line no-unused-vars\nimport Home from '../home/home';\nimport PostDetail from '../postdetail/postdetail';\nimport posts from '../../../blog-posts.json';\nimport { Route, Switch } from 'react-router-dom'; // eslint-disable-line no-unused-vars\n\n\n// document.body.appendChild(component());\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path='/webpack-demo/' component={ Home }/>\n    <Route path='/webpack-demo/about' component={ About }/>\n    <Route path='/webpack-demo/post/:slug' component={props =>{\n      const post = posts.posts.filter(post => props.match.params.slug === post.slug);\n      return < PostDetail post={post[0]} />;\n    } }/>\n    <Route component={NotFound}/>\n  </Switch>\n);\n\nexport default Routes;\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/routes/routes.js","// removed by extract-text-webpack-plugin\nmodule.exports = {\"container\":\"-PURIFY_main-container-15HKea-\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/main.css\n// module id = 1Q41\n// module chunks = 0 2","import React from 'react'; // eslint-disable-line no-unused-vars\nimport Post from '../post/post'; // eslint-disable-line no-unused-vars\nimport posts from '../../../blog-posts.json'; // eslint-disable-line no-unused-vars\n\nconst Home = () => (\n<div>\n  {posts.posts.map(post => <Post {...post} key={post.slug} titleLink/>)}\n</div>\n);\n\nexport default Home;\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/home/home.js","import React from 'react';\nimport Post from '../post/post';\n\n\nconst PostDetail = (props) => (\n  <div>\n    {console.log(props)}\n    <Post {...props.post}/>\n  </div>\n);\n\n\nexport default PostDetail;\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/postdetail/postdetail.js","import App from './component'; // eslint-disable-line no-unused-vars\nimport {render} from 'react-dom';\nimport './base.css';\nimport { install } from 'offline-plugin/runtime';\nimport React from 'react'; // eslint-disable-line no-unused-vars\n\n\n// document.body.appendChild(component());\n// var myApp = <div>Hello world<div/>;\n// var elem = React.createElement(App);\n\nrender(<App />, document.getElementById('app'));\n\nif (process.env.NODE_ENV === 'production'){\n  install();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/index.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/base.css\n// module id = 3ayb\n// module chunks = 0 2","// removed by extract-text-webpack-plugin\nmodule.exports = {\"heading\":\"-PURIFY_about-heading-1SU_s7-\",\"bio\":\"-PURIFY_about-bio-2yDB8Z-\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/components/about/about.css\n// module id = FzJG\n// module chunks = 0 2","// removed by extract-text-webpack-plugin\nmodule.exports = {\"title\":\"-PURIFY_post-title-3-XEaj-\",\"link\":\"-PURIFY_post-link-2hAC7w-\",\"content\":\"-PURIFY_post-content-YCOKdV-\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/components/post/post.css\n// module id = QSIk\n// module chunks = 0 2","import React from 'react'; // eslint-disable-line no-unused-vars\n\n\nconst NotFound = () =>(\n  <h1>Whoops! There nothing to see here</h1>\n);\n\nexport default NotFound;\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/notfound/notfound.js","// // import styles from './main.css';\n//\n// export default (text='Hello world. Enjoying web pack? cool') => {\n//   const element = document.createElement('div');\n//\n//   element.innerHTML = text;\n//   element.className = 'fa fa-hand-spock-o fa-lg';\n//\n//   element.onclick = () => {\n//     import('./lazy').then((lazy) => {\n//       element.textContent = lazy.default;\n//     }).catch((err) => {\n//       console.error(err);\n//     });\n//   };\n//\n//   return element;\n// };\n\n\n// import component from './component';\nimport styles from './main.css'; // eslint-disable-line no-unused-vars\nimport React from 'react'; // eslint-disable-line no-unused-vars\nimport Header from './components/header/header'; // eslint-disable-line no-unused-vars\n// import Post from './components/post/post'; // eslint-disable-line no-unused-vars\n// import About from './components/about/about'; // eslint-disable-line no-unused-vars\n// import NotFound from './components/notfound/notfound'; // eslint-disable-line no-unused-vars\n// import Home from './components/home/home';\n// import PostDetail from './components/postdetail/postdetail';\nimport Routes from './components/routes/routes';\n// import posts from '../blog-posts.json';\nimport { BrowserRouter as Router } from 'react-router-dom'; // eslint-disable-line no-unused-vars\n\n\n// document.body.appendChild(component());\n\nconst App = () => (\n  <Router>\n  <div >\n    <Header />\n    <div className={styles.container}>\n    < Routes />\n  </div>\n</div>\n</Router>\n);\n\nexport default App;\n\n\n\n// WEBPACK FOOTER //\n// ./app/component.js","import React from 'react'; // eslint-disable-line no-unused-vars\nimport styles from './header.css';\nimport { Link } from 'react-router-dom'; // eslint-disable-line no-unused-vars\n\n\nconst Header = () => (\n  <header className={styles.header}>\n    <div className={styles.container}>\n      <h1 className={styles.title}>Kantologist</h1>\n      <nav>\n        <ul className={styles.list}>\n          <li className={styles.listitems}><Link className={styles.links} to=\"/webpack-demo/about\">About</Link></li>\n          <li className={styles.listitems}><Link className={styles.links} to=\"/webpack-demo/\">Post</Link></li>\n        </ul>\n      </nav>\n    </div>\n  </header>\n);\n\nexport default Header;\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/header/header.js","import React from 'react'; // eslint-disable-line no-unused-vars\n\nimport styles from './post.css'; // eslint-disable-line no-unused-vars\nimport { Link } from 'react-router-dom';\n\nconst Post = (props) => (\n  <div>\n    <h2 className={styles.title}>\n    {props.titleLink\n      ?<Link className={styles.link} to={`/webpack-demo/post/${props.slug}`}>{props.title}</Link>\n      : props.title}\n    </h2>\n    <p className={styles.content}>{props.excerpt} </p>\n  </div>\n);\n\nexport default Post;\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/post/post.js","import React from 'react'; // eslint-disable-line no-unused-vars\nimport styles from './about.css';\n\nconst About = () => (\n  <div>\n    <h1 className={styles.heading}> Hi, I am Femi!</h1>\n    <p className={styles.bio}> This is all about me </p>\n  </div>\n);\n\nexport default About;\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/about/about.js","// removed by extract-text-webpack-plugin\nmodule.exports = {\"header\":\"-PURIFY_header-header-3bg5fk-\",\"container\":\"-PURIFY_header-container-qEQAK0-\",\"title\":\"-PURIFY_header-title-2lCWti-\",\"list\":\"-PURIFY_header-list-lS3oQM-\",\"listitems\":\"-PURIFY_header-listitems-2NXt4Z-\",\"links\":\"-PURIFY_header-links-1uOJGh-\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/components/header/header.css\n// module id = ybOS\n// module chunks = 0 2","module.exports = {\n\t\"posts\": [\n\t\t{\n\t\t\t\"title\": \"How to build a progressive web app with React\",\n\t\t\t\"slug\": \"how-to-build-a-progressive-web-app-with-react\",\n\t\t\t\"excerpt\": \"One of the easiest ways to get a job in the early GitHub days was to work on one of our open source projects. We’d start to recognize your username and ability, and you’d be able to get a better idea of how we operated internally. For a small, scrappy, bootstrapped company, this was a huge time saver for us early on.\",\n\t\t\t\"content\": \"One of the easiest ways to get a job in the early GitHub days was to work on one of our open source projects. We’d start to recognize your username and ability, and you’d be able to get a better idea of how we operated internally. For a small, scrappy, bootstrapped company, this was a huge time saver for us early on. One of the easiest ways to get a job in the early GitHub days was to work on one of our open source projects. We’d start to recognize your username and ability, and you’d be able to get a better idea of how we operated internally. For a small, scrappy, bootstrapped company, this was a huge time saver for us early on. One of the easiest ways to get a job in the early GitHub days was to work on one of our open source projects. We’d start to recognize your username and ability, and you’d be able to get a better idea of how we operated internally. For a small, scrappy, bootstrapped company, this was a huge time saver for us early on. One of the easiest ways to get a job in the early GitHub days was to work on one of our open source projects. We’d start to recognize your username and ability, and you’d be able to get a better idea of how we operated internally. For a small, scrappy, bootstrapped company, this was a huge time saver for us early on. One of the easiest ways to get a job in the early GitHub days was to work on one of our open source projects. We’d start to recognize your username and ability, and you’d be able to get a better idea of how we operated internally. For a small, scrappy, bootstrapped company, this was a huge time saver for us early on. One of the easiest ways to get a job in the early GitHub days was to work on one of our open source projects. We’d start to recognize your username and ability, and you’d be able to get a better idea of how we operated internally. For a small, scrappy, bootstrapped company, this was a huge time saver for us early on.\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Testing with Jest and Enzyme\",\n\t\t\t\"slug\": \"testing-with-jest-and-enzyme\",\n\t\t\t\"excerpt\": \"Jest can be used in projects that use webpack to manage assets, styles, and compilation. webpack does offer some unique challenges over other tools because it integrates directly with your application to allow managing stylesheets, assets like images and fonts, along with the expansive ecosystem of compile-to-JavaScript languages and tools.\",\n\t\t\t\"content\": \"Jest can be used in projects that use webpack to manage assets, styles, and compilation. webpack does offer some unique challenges over other tools because it integrates directly with your application to allow managing stylesheets, assets like images and fonts, along with the expansive ecosystem of compile-to-JavaScript languages and tools. Jest can be used in projects that use webpack to manage assets, styles, and compilation. webpack does offer some unique challenges over other tools because it integrates directly with your application to allow managing stylesheets, assets like images and fonts, along with the expansive ecosystem of compile-to-JavaScript languages and tools. Jest can be used in projects that use webpack to manage assets, styles, and compilation. webpack does offer some unique challenges over other tools because it integrates directly with your application to allow managing stylesheets, assets like images and fonts, along with the expansive ecosystem of compile-to-JavaScript languages and tools. Jest can be used in projects that use webpack to manage assets, styles, and compilation. webpack does offer some unique challenges over other tools because it integrates directly with your application to allow managing stylesheets, assets like images and fonts, along with the expansive ecosystem of compile-to-JavaScript languages and tools. Jest can be used in projects that use webpack to manage assets, styles, and compilation. webpack does offer some unique challenges over other tools because it integrates directly with your application to allow managing stylesheets, assets like images and fonts, along with the expansive ecosystem of compile-to-JavaScript languages and tools. Jest can be used in projects that use webpack to manage assets, styles, and compilation. webpack does offer some unique challenges over other tools because it integrates directly with your application to allow managing stylesheets, assets like images and fonts, along with the expansive ecosystem of compile-to-JavaScript languages and tools.\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Getting started with CSS modules in Webpack\",\n\t\t\t\"slug\": \"getting-started-with-css-modules-in-webpack\",\n\t\t\t\"excerpt\": \"A CSS Module is a CSS file in which all class names and animation names are scoped locally by default. All URLs (url(...)) and @imports are in module request format (./xxx and ../xxx means relative, xxx and xxx/yyy means in modules folder, i. e. in node_modules). CSS Modules compile to a low-level interchange format called ICSS or Interoperable CSS, but are written like normal CSS files.\",\n\t\t\t\"content\": \"A CSS Module is a CSS file in which all class names and animation names are scoped locally by default. All URLs (url(...)) and @imports are in module request format (./xxx and ../xxx means relative, xxx and xxx/yyy means in modules folder, i. e. in node_modules). CSS Modules compile to a low-level interchange format called ICSS or Interoperable CSS, but are written like normal CSS files. A CSS Module is a CSS file in which all class names and animation names are scoped locally by default. All URLs (url(...)) and @imports are in module request format (./xxx and ../xxx means relative, xxx and xxx/yyy means in modules folder, i. e. in node_modules). CSS Modules compile to a low-level interchange format called ICSS or Interoperable CSS, but are written like normal CSS files. A CSS Module is a CSS file in which all class names and animation names are scoped locally by default. All URLs (url(...)) and @imports are in module request format (./xxx and ../xxx means relative, xxx and xxx/yyy means in modules folder, i. e. in node_modules). CSS Modules compile to a low-level interchange format called ICSS or Interoperable CSS, but are written like normal CSS files. A CSS Module is a CSS file in which all class names and animation names are scoped locally by default. All URLs (url(...)) and @imports are in module request format (./xxx and ../xxx means relative, xxx and xxx/yyy means in modules folder, i. e. in node_modules). CSS Modules compile to a low-level interchange format called ICSS or Interoperable CSS, but are written like normal CSS files. A CSS Module is a CSS file in which all class names and animation names are scoped locally by default. All URLs (url(...)) and @imports are in module request format (./xxx and ../xxx means relative, xxx and xxx/yyy means in modules folder, i. e. in node_modules). CSS Modules compile to a low-level interchange format called ICSS or Interoperable CSS, but are written like normal CSS files. \"\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./blog-posts.json\n// module id = yz9A\n// module chunks = 0"],"sourceRoot":""}